# You are given an array of distinct integers nums, sorted in ascending order, and an integer target.
# Implement a function to search for target within nums. If it exists, then return its index, otherwise, return -1.
# ITERATIVE BINARY SEARCH

class Solution:
    def search(self, nums: list[int], target: int) -> int:
        l, r = 0, len(nums) - 1

        while l<= r:
            # (l+r)//2 can lead to overflow as 32 bit integer ranges from -2,147,483,647 to 2,147,483,647
            m = l + ((r-l) // 2)

            if nums[m] > target:
                r = m - 1
            elif nums[m] < target:
                l = m + 1
            else:
                return m
        return -1

sol = Solution()
nums=[-1,0,2,4,6,8]
target=4
print(sol.search(nums,target))

# Time : O(n), Space : O(n)