# Given an array of integers nums, find the subarray with the largest sum and return the sum.
# A subarray is a contiguous non-empty sequence of elements within an array.

class Solution:
    def maxSubArray(self, nums: list[int]) -> int:
        maxSub = nums[0]
        curSum = 0

        for n in nums:
            if curSum < 0: #If curSum=negative, make the curSum = 0
                curSum = 0
            curSum += n #Add curSum to n
            maxSub = max(maxSub, curSum) #Compute maxSub for every iteration
        return maxSub


sol = Solution()
nums=[2,-3,4,-2,2,1,-1,4]
output=8
print(sol.maxSubArray(nums))
# Time : O(n), Space : O(n)
#Kadane's Algorithm