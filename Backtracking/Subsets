# Given an array nums of unique integers, return all possible subsets of nums.
# The solution set must not contain duplicate subsets. You may return the solution in any order.

class Solution:
    def subsets(self, nums: list[int]) -> list[list[int]]:
        res = []
        subset= []

        def dfs(i):
            if i >= len(nums):
                res.append(subset.copy())
                return 
            
            # Decision to include nums[i]
            subset.append(nums[i])
            dfs(i+1)

            # Decision not to include nums[i]
            subset.pop()
            dfs(i+1)
        
        dfs(0) #Pass pointer 0th position to dfs
        return res

sol = Solution()
nums = [1,2,3]
Output: [[1,2,3],[1,2],[1,3],[1],[2,3],[2],[3],[]]
print(sol.subsets(nums))
# Time : O(n*2^n), Space : O(n)