# Given an unsorted array of integers nums and an integer k, return the kth largest element in the array.
# By kth largest element, we mean the kth largest element in the sorted order, not the kth distinct element.
# Follow-up: Can you solve it without sorting?

import heapq

class Solution:
    def findKthLargest(self, nums: list[int], k: int) -> int:
                
                return heapq.nlargest(k, nums)[-1] 
                #heapq.nlargest(k, nums)[-1] returns the k-th largest element in the list nums.
                #heapq.nlargest(k, nums) returns the n largest elements in the list nums. 

               # SORTING SOLUTION #
               # nums.sort()
               # return nums[len(nums) - k]

sol = Solution()
nums=[2,3,1,1,5,5,4]
k=3
print(sol.findKthLargest(nums,k))
# Time : O(nlogk), Space : O(k)